name: CI/CD Pipiline for DevOps Assignment

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "devops/**"
      - "devopsservice/**"
      - "devopscdk/**"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.detect_changes.outputs.repos }}
    steps:
      - name: Checkout devops
        uses: actions/checkout@v4
        with:
          repository: ConRose456/SE-DevOps
          token: ${{ secrets.MY_GH_PAT }}
          path: devops

      - name: Checkout devopsservice
        uses: actions/checkout@v4
        with:
          repository: ConRose456/SE-DevOpsService
          token: ${{ secrets.MY_GH_PAT }}
          path: devopsservice

      - name: Checkout devopscdk
        uses: actions/checkout@v4
        with:
          repository: ConRose456/SE-DevOpsCDK
          token: ${{ secrets.MY_GH_PAT }}
          path: devopscdk

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Configure npm to use GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.MY_GH_PAT }}" > devopscdk/.npmrc
          echo "@conrose456:registry=https://npm.pkg.github.com/" >> ~/.npmrc

      - name: Install dependencies
        run: |
          cd devops && npm install
          cd ../devopsservice && npm install
          cd ../devopscdk && npm install

      - name: Build repositories
        run: |
          for repo in devops devopsservice devopscdk; do
            echo "Building $repo"
            cd $repo && npm run build
            cd ../
          done

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: ./devopscdk
  beta:
    runs-on: ubuntu-latest
    needs: build
    environment: beta 
    steps:
      - name: Checkout repository artifacts from build stage
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Install Dependencies
        run: |
          npm install -g aws-cdk
          npm install -g ts-node
          npm install -g jsii

      - name: Deploy to Beta Stage with CDK
        run: |
          ls
          cdk deploy Beta-ServiceStack --require-approval never



